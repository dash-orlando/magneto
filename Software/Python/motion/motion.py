"""
Motion Test Script

Script designed to generate GCODE for a given 3D path

Fluvio L Lobo Fenoglietto
"""

def gcode_gen( out_name, x, y, z ):
    """
    Given a 3D path described by its coordinates in x, y, and z,
    the function generates a GCODE
    """
    
    array_len = len(x)                                              # len(y) or len(z)
    x = x.round( decimals=2 )                                       # truncate float to 2 decimals            
    y = y.round( decimals=2 )
    z = z.round( decimals=2 )
    
    ext = ".gcode"
    file_name = out_name + ext
    file = open( file_name, "w" )
    
    for i in range(0, array_len):                                   # write all the data from the data arrays

        if i == 0:

            # Terminal Debug ================================================== #
            print( '; G-Code generated by gcode_gen version 1.0' )
            print( '; Home axes...' )
            print( 'G28 ;' )                                                    # gcode command for homing all axes
            print( '; Initializing...' )
            print( ';  Applying Z Offset...' )
            print( 'G91 ; Relative position...' )                               # set relative position
            print( 'G1 Z50 ; Add Z Offset to avoid electronics...' )            # apply Z offset to avoid electronics
            print( '; Starting Path...\n' )
            print( 'G90 ; Absolute position...\n' )                             # set absolute position
            print( 'G1 X{} Y{} Z{}'.format(x[i], y[i], z[i]))                   # print to terminal for debuging
            # ================================================================= #

            # GCODE Generator ================================================= #
            file.write( '; G-Code generated by gcode_gen version 1.0\n' )
            file.write( '; Home axes...\n' )
            file.write( 'G28 ;\n' )                                             # gcode command for homing all axes
            file.write( '; Initializing...\n' )
            file.write( ';  Applying Z Offset...\n' )
            file.write( 'G91 ; Relative position...\n' )                        # set relative position
            file.write( 'G1 Z50 ; Add Z Offset to avoid electronics...\n' )     # apply Z offset to avoid electronics
            file.write( '; Starting Path...\n' )
            file.write( 'G90 ; Absolute position...\n' )                        # set absolute position
            file.write( 'G1 X{} Y{} Z{}\n'.format(x[i], y[i], z[i]))            # write to .gcode file...
            # ================================================================= #

        elif i > 0:

            # Terminal Debug ================================================== #
            # print( 'X{} Y{} Z{}'.format(x[i], y[i], z[i]))                      # print to terminal for debuging
            # ================================================================= #

            # GCODE Generator ================================================= #

            file.write( 'G1 X{} Y{} Z{}\n'.format(x[i], y[i], z[i]))            # write to .gcode file...
            # ================================================================= #

    file.close()
